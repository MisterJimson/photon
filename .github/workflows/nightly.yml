name: Photon Nightly
on:
  push:
    branches:
      - build
  workflow_dispatch:

jobs:
  build-linux-all:
    name: Linux
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup flutter
        uses: subosito/flutter-action@master
        with:
          channel: stable

      - name: Installing dependencies
        run: sudo apt-get update -y && sudo apt-get install -y libvlc-dev ninja-build libgtk-3-dev dpkg-dev pkg-config rpm

      - name: Enable desktop support
        run: flutter config --enable-linux-desktop

      - name: Build Flutter app
        run: flutter build linux

      - name: Bump versions
        run: |
          version=$(grep "^version" pubspec.yaml | awk '{print $2}')
          sed -i "s:VERSION:$(echo $version):" linux/packaging/rpm/photon.spec
          sed -i "s:VERSION:$(echo $version):" linux/packaging/deb/DEBIAN/control
 
      - name: Build RPM Package
        run: |
          cp -fr build/linux/x64/release/bundle linux/packaging/deb/usr/share/photon
          mkdir linux/packaging/deb/usr/bin
          ln -sr linux/packaging/deb/usr/share/photon/photon linux/packaging/deb/usr/bin/photon
          sed -i "s:cp -rf :cp -rf $(pwd)/:" linux/packaging/rpm/photon.spec
          cd linux/packaging/deb
          sed -i "s:FILES_HERE:$(find usr \( -type l -o -type f \) -follow -print | awk '{printf "/%s\\n", $0}'):" ../rpm/photon.spec
          cd ../../../
          rpmbuild -bb linux/packaging/rpm/photon.spec -D "_topdir $(pwd)/rpmbuild"
          cp rpmbuild/RPMS/x86_64/*.rpm photon-linux-${{ github.event_name == 'release' && github.event.release.tag_name || 'nightly' }}-x86_64.rpm
          rm -rf linux/packaging/rpm
      - name: Build DEB Package
        run: |
          dpkg-deb --build --root-owner-group linux/packaging/deb
          cp linux/packaging/*.deb photon-linux-${{ github.event_name == 'release' && github.event.release.tag_name || 'nightly' }}-x86_64.deb
      - name: Build Tarball
        run: |
          mkdir -p AppDir/
          cp -r linux/packaging/deb/usr AppDir/
          ln -sr AppDir/usr/share/photon/photon AppDir/photon
          tar czf photon-linux-${{ github.event_name == 'release' && github.event.release.tag_name || 'nightly' }}-x86_64.tar.gz -C AppDir/ .
      - name: Build AppImage
        run: |
          echo '#!/bin/sh
          cd "$(dirname "$0")"
          exec ./photon' > AppDir/AppRun
          chmod +x AppDir/AppRun
          ln -sr AppDir/usr/share/icons/hicolor/128x128/apps/photon.png AppDir/photon.png
          cp AppDir/usr/share/applications/photon.desktop AppDir/photon.desktop
          curl -L https://github.com/AppImage/AppImageKit/releases/download/nightly/appimagetool-x86_64.AppImage -o appimagetool-x86_64.AppImage
          chmod +x appimagetool-x86_64.AppImage
          ARCH=x86_64 ./appimagetool-x86_64.AppImage AppDir/ photon-linux-${{ github.event_name == 'release' && github.event.release.tag_name || 'nightly' }}-x86_64.AppImage
      - uses: svenstaro/upload-release-action@latest
        with:
          repo_token: ${{ secrets.TOKEN }}
          file: photon-linux-*
          file_glob: true
          prerelease: ${{ github.event_name != 'release' }}
          release_name: ${{ github.event_name == 'release' && github.event.release.name || 'Development Build' }}
          tag: ${{ github.event_name == 'release' && github.event.release.tag_name || 'nightly' }}
          overwrite: true

  build_android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          cache: true
          token: ${{secrets.TOKEN}} 
      - run: |
          sudo apt-get update -y
          sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev make python3-pip python3-setuptools patchelf desktop-file-utils libgdk-pixbuf2.0-dev fakeroot strace fuse

      - run: |
          flutter pub get
          flutter build apk
          make apk
      - name: rename
        if: ${{ github.event_name != 'release' }}
        run: mv build/app/outputs/apk/release/app-* build/app/outputs/apk/release/photon-android-nightly.apk
      - uses: svenstaro/upload-release-action@latest
        with:
          repo_token: ${{ secrets.TOKEN }}
          file: build/app/outputs/apk/release/photon-*
          file_glob: true
          prerelease: ${{ github.event_name != 'release' }}
          release_name: ${{ github.event_name == 'release' && github.event.release.name || 'Development Build' }}
          tag: ${{ github.event_name == 'release' && github.event.release.tag_name || 'nightly' }}
          overwrite: true

  build_windows:
    name: Windows
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup flutter
        uses: subosito/flutter-action@master
        with:
          channel: stable

      - name: Enable desktop support
        run: flutter config --enable-windows-desktop

      - name: Build Flutter app
        run: flutter build windows

      - run: cp -r build/windows/runner/Release photon-windows-exe
      - run: tar.exe -a -c -f photon-windows-${{ github.event_name == 'release' && github.event.release.tag_name || 'nightly' }}.zip photon-windows-exe

      - run: |
          "%programfiles(x86)%\Inno Setup 6\iscc.exe" "photon_inst.iss"
        shell: cmd
      - run: cp Output/* ./photon-windows-${{ github.event_name == 'release' && github.event.release.tag_name || 'nightly' }}.exe

      - uses: svenstaro/upload-release-action@latest
        with:
          repo_token: ${{ secrets.TOKEN }}
          file: photon-windows-*
          file_glob: true
          prerelease: ${{ github.event_name != 'release' }}
          release_name: ${{ github.event_name == 'release' && github.event.release.name || 'Development Build' }}
          tag: ${{ github.event_name == 'release' && github.event.release.tag_name || 'nightly' }}
          overwrite: true

  build_macos:
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v2
        with:
          cache: true
          token: ${{secrets.TOKEN}} 
      - run: flutter config --enable-macos-desktop
      - run: flutter pub get
      - run: flutter build macos
      - run: du -sh build/macos/Build/Products/Release/photon.app
      - run: npm install -g appdmg
      - run: appdmg photondmg.json build/photon-macos-x86_64.dmg
 
      - uses: svenstaro/upload-release-action@latest
        with:
          repo_token: ${{ secrets.TOKEN }}
          file: build/photon-macos-x86_64.dmg
          file_glob: true
          prerelease: ${{ github.event_name != 'release' }}
          release_name: ${{ github.event_name == 'release' && github.event.release.name || 'Development Build' }}
          tag: ${{ github.event_name == 'release' && github.event.release.tag_name || 'nightly' }}
          overwrite: true

  build_ios:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
    - uses: subosito/flutter-action@v2
      with:
        channel: 'stable'
        architecture: x64
    - run: flutter pub get
    - run: flutter build ipa --release --no-codesign
    - uses: actions/upload-artifact@v2 
      with:
        name: Photon-iOS-Bundle
        token: ${{secrets.TOKEN}}
        path: |
          build/ios/ipa/*.ipa

    
