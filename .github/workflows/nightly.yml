name: Photon Nightly
on:
  push:
    branches:
      - build
  workflow_dispatch:

jobs:
  build_ubuntu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          cache: true
          token: ${{secrets.TOKEN}}
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
      - run: |
          sudo apt-get update -y
          sudo apt-get install -y tar clang cmake ninja-build pkg-config libgtk-3-dev make python3-pip python3-setuptools patchelf desktop-file-utils libgdk-pixbuf2.0-dev fakeroot strace fuse libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev
      - run: |
          wget -O appimage-builder-x86_64.AppImage https://github.com/AppImageCrafters/appimage-builder/releases/download/v1.0.0-beta.1/appimage-builder-1.0.0-677acbd-x86_64.AppImage
          chmod +x appimage-builder-x86_64.AppImage
          mv appimage-builder-x86_64.AppImage /usr/local/bin/appimage-builder

      - run: |
          flutter config --enable-linux-desktop
          flutter pub get
          dart pub global activate flutter_distributor
          flutter_distributor package --platform=linux --targets=appimage --skip-clean
          make tar
 
      - uses: actions/upload-artifact@v3
        with:
          token: ${{secrets.TOKEN}}
          name: Photon-Linux-Bundle
          path: dist/

  build_android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          cache: true
          token: ${{secrets.TOKEN}} 
      - run: |
          sudo apt-get update -y
          sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev make python3-pip python3-setuptools patchelf desktop-file-utils libgdk-pixbuf2.0-dev fakeroot strace fuse

      - run: |
          flutter pub get
          flutter build apk
          make apk
      - uses: actions/upload-artifact@v2
        with:
          name: Photon-Android-Bundle
          token: ${{secrets.TOKEN}}
          path: |
            build/photon-android-all-arch.apk

  build_windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      # Build Windows Executable
      - uses: subosito/flutter-action@v2.2.0
        with:
          cache: true
          token: ${{secrets.TOKEN}}
      - run: |
          flutter config --enable-windows-desktop
          flutter pub get
          dart pub global activate flutter_distributor
          make innoinstall
          flutter_distributor package --platform=windows --targets=exe --skip-clean

 
      - run: mv dist/**/photon-*-windows-setup.exe dist/photon-windows-x86_64-setup.exe

      # Upload artifacts
      - uses: actions/upload-artifact@v3
        with:
          name: Photon-Windows-Bundle
          token: ${{secrets.TOKEN}}
          path: dist/

  build_macos:
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v2
        with:
          cache: true
          token: ${{secrets.TOKEN}} 
      - run: flutter config --enable-macos-desktop
      - run: flutter pub get
      - run: flutter build macos
      - run: du -sh build/macos/Build/Products/Release/photon.app
      - run: npm install -g appdmg
      - run: appdmg photondmg.json build/photon-macos-x86_64.dmg
      - uses: actions/upload-artifact@v2
        with:
          name: Photon-Macos-Bundle
          token: ${{secrets.TOKEN}}
          path: |
            build/photon-macos-x86_64.dmg

  build_ios:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
    - uses: subosito/flutter-action@v2
      with:
        channel: 'stable'
        architecture: x64
    - run: flutter pub get
    - run: flutter test
    - run: flutter build ios --release --no-codesign
    - uses: actions/upload-artifact@v2 
      with:
        name: Photon-iOS-Bundle
        token: ${{secrets.TOKEN}}
        path: |
          build/ios/iphoneos/Runner.app

    
